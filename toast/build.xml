<?xml version="1.0" encoding="UTF-8"?>
<project name="TOAST" default="jar" basedir=".">
    <description>Builds, tests, and runs TOAST argument engine</description>
    
    <property name="build.dir" value="build/classes" />
    <property name="test.build.dir" value="build/test" />
    <property name="dist.dir" value="dist" />
    <property name="lib.dir" value="lib" />
    <property name="src.dir" value="src" />
    <property name="main.class" value="tech.arg.toast.rest.Toast" />
    <property name="project.name" value="toast" />
    <property name="test.src.dir" value="test" />
    <property name="test.report.dir" value="testreport" />
    
    <!--- Include all libraries when building -->
    <path id="build.classpath">
        <fileset dir="lib">
            <include name="**/*.jar" />
        </fileset>
    </path>
    
    <!-- Include all libraries when testing, plus the original project -->
    <path id="test.build.classpath">
        <path refid="build.classpath" />
        <pathelement location="${build.dir}" />
    </path>

    <target name="clean">
        <delete dir="${build.dir}" failonerror="false" />
        <delete dir="${test.build.dir}" failonerror="false" />
        <delete dir="${dist.dir}" failonerror="false" />
        <delete dir="${test.report.dir}" failonerror="false" />
    </target>

    <target name="build" depends="clean">
        <mkdir dir="${build.dir}" />
        <javac destdir="${build.dir}" debug="true" includeantruntime="false">
            <!--<compilerarg value="-Xlint:unchecked"/>-->
            <src path="${src.dir}" />
            <classpath refid="build.classpath" />
        </javac>
    </target>
    
    <target name="jar" depends="clean,build">
        <mkdir dir="${dist.dir}" />
        <manifestclasspath property="jar.classpath" jarfile="${dist.dir}/${project.name}.jar">
            <classpath refid="build.classpath" />
        </manifestclasspath>
        
        <copy todir="${dist.dir}/lib">
            <fileset dir="${lib.dir}" includes="**" />
        </copy>
        <jar destfile="${dist.dir}/${project.name}.jar" basedir="${build.dir}">
            <manifest>
                <attribute name="Main-Class" value="${main.class}" />
                <attribute name="Class-Path" value="${jar.classpath}" />
            </manifest>
        </jar>
    </target>
    
    <target name="test-build" depends="build">
        <mkdir dir="${test.build.dir}"/>
        <javac srcdir="${test.src.dir}" destdir="${test.build.dir}" includeantruntime="false">
            <classpath refid="test.build.classpath"/>
        </javac>
    </target>

    <target name="test" depends="test-build">
        <junit printsummary="on" haltonfailure="yes" fork="true">
        <classpath>
          <path refid="test.build.classpath"/>
          <pathelement location="${test.build.dir}"/>
        </classpath>
        <formatter type="brief" usefile="false" />
        <batchtest>
            <fileset dir="${test.src.dir}" includes="**/*Test.java" />
        </batchtest>
    </junit>
    </target>
    
    <target name="run" depends="jar">
        <java jar="${dist.dir}/${project.name}.jar" />
    </target>
</project>
